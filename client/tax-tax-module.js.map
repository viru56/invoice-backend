{"version":3,"sources":["webpack:///./src/app/tax/tax.component.html","webpack:///./src/app/tax/tax.component.scss","webpack:///./src/app/tax/tax.component.ts","webpack:///./src/app/tax/tax.module.ts"],"names":[],"mappings":"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","file":"tax-tax-module.js","sourcesContent":["module.exports = \"<div class=\\\"header\\\">\\n  <p>\\n    <span class=\\\"title\\\">Taxes</span>\\n\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addNewTaxRate()\\\">\\n      <mat-icon>add_box</mat-icon> New Tax Rate\\n    </button>\\n  </p>\\n  <div class=\\\"subtitle\\\">\\n    You can create tax rates that can be applied to line items and subtotals.\\n  </div>\\n</div>\\n<div class=\\\"table-wrapper\\\" *ngIf=\\\"dataSource.data.length>0\\\">\\n  <mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z1\\\">\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{ element.name }} </mat-cell>\\n    </ng-container>\\n  \\n    <!-- Amount Column -->\\n    <ng-container matColumnDef=\\\"amount\\\">\\n      <mat-header-cell *matHeaderCellDef> Amount </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{ element.amount }} %</mat-cell>\\n    </ng-container>\\n  \\n    <!-- Tax mode Column -->\\n    <ng-container matColumnDef=\\\"taxMode\\\">\\n      <mat-header-cell *matHeaderCellDef> Tax mode </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"\\n        ><span\\n          class=\\\"tax-mode\\\"\\n          *ngIf=\\\"element.taxMode\\\"\\n          style=\\\"border-color:green;color:green\\\"\\n          > &nbsp;Inclusive</span\\n        >\\n        <span\\n          class=\\\"tax-mode\\\"\\n          *ngIf=\\\"!element.taxMode\\\"\\n          >Exclusive</span\\n        >\\n      </mat-cell>\\n    </ng-container>\\n  \\n    <!-- Action Column -->\\n    <ng-container matColumnDef=\\\"action\\\">\\n      <mat-header-cell *matHeaderCellDef> Action </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element;let index\\\">\\n        <mat-icon (click)=\\\"editTaxRate(element)\\\" matTooltip=\\\"edit\\\">edit</mat-icon>\\n        <mat-icon color=\\\"warn\\\" (click)=\\\"deleteTaxRate(index)\\\" matTooltip=\\\"delete\\\"\\n          >delete_forever</mat-icon\\n        >\\n      </mat-cell>\\n    </ng-container>\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></mat-row>\\n  </mat-table>\\n</div>\\n\\n<div *ngIf=\\\"dataSource.data.length===0\\\" class=\\\"mat-elevation-z1\\\">\\n    <p class=\\\"p20\\\">No Tax Found</p>\\n</div>\\n\"","module.exports = \".header p {\\n  margin: 20px 20px 20px 20px; }\\n  .header p .title {\\n    font-size: 1.6rem;\\n    padding-right: 10px; }\\n  .header p button {\\n    float: right; }\\n  .header .subtitle {\\n  margin: 20px;\\n  font-size: small; }\\n  .table-wrapper {\\n  overflow: auto;\\n  max-height: 600px; }\\n  .table-wrapper .mat-table {\\n    margin: 20px; }\\n  .table-wrapper .mat-table .mat-header-cell {\\n      font-size: 1rem; }\\n  .table-wrapper .mat-table .mat-row:hover {\\n      background-color: #f5f5f5; }\\n  .table-wrapper .mat-table .tax-mode {\\n      background: #f5f5f5;\\n      padding: 5px;\\n      border: 1px solid #ccc;\\n      border-radius: 4px; }\\n  .table-wrapper .cdk-column-action mat-icon {\\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\\n    margin-right: 10px;\\n    padding: 5px;\\n    border-radius: 4px;\\n    height: 20px;\\n    width: 20px;\\n    font-size: 20px;\\n    background: #f5f5f5;\\n    cursor: pointer; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pNTAyMzA2L0RvY3VtZW50cy9pbnZvaWNlL2ludm9pY2UtY2xpZW50L3NyYy9hcHAvdGF4L3RheC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLDJCQUEyQixFQUFBO0VBRi9CO0lBSU0saUJBQWlCO0lBQ2pCLG1CQUFtQixFQUFBO0VBTHpCO0lBUU0sWUFBWSxFQUFBO0VBUmxCO0VBWUksWUFBWTtFQUNaLGdCQUFnQixFQUFBO0VBR3BCO0VBQ0UsY0FBYztFQUNkLGlCQUFpQixFQUFBO0VBRm5CO0lBSUksWUFBWSxFQUFBO0VBSmhCO01BTU0sZUFBZSxFQUFBO0VBTnJCO01BU00seUJBQXlCLEVBQUE7RUFUL0I7TUFZTSxtQkFBbUI7TUFDbkIsWUFBWTtNQUNaLHNCQUFzQjtNQUN0QixrQkFBa0IsRUFBQTtFQWZ4QjtJQW9CTSx5SEFDMEU7SUFDMUUsa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLFdBQVc7SUFDWCxlQUFlO0lBQ2YsbUJBQW1CO0lBQ25CLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3RheC90YXguY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGVhZGVyIHtcbiAgcCB7XG4gICAgbWFyZ2luOiAyMHB4IDIwcHggMjBweCAyMHB4O1xuICAgIC50aXRsZSB7XG4gICAgICBmb250LXNpemU6IDEuNnJlbTtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG4gICAgfVxuICAgIGJ1dHRvbiB7XG4gICAgICBmbG9hdDogcmlnaHQ7XG4gICAgfVxuICB9XG4gIC5zdWJ0aXRsZSB7XG4gICAgbWFyZ2luOiAyMHB4O1xuICAgIGZvbnQtc2l6ZTogc21hbGw7XG4gIH1cbn1cbi50YWJsZS13cmFwcGVyIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIG1heC1oZWlnaHQ6IDYwMHB4O1xuICAubWF0LXRhYmxlIHtcbiAgICBtYXJnaW46IDIwcHg7XG4gICAgLm1hdC1oZWFkZXItY2VsbCB7XG4gICAgICBmb250LXNpemU6IDFyZW07XG4gICAgfVxuICAgIC5tYXQtcm93OmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XG4gICAgfVxuICAgIC50YXgtbW9kZSB7XG4gICAgICBiYWNrZ3JvdW5kOiAjZjVmNWY1O1xuICAgICAgcGFkZGluZzogNXB4O1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICB9XG4gIH1cbiAgLmNkay1jb2x1bW4tYWN0aW9uIHtcbiAgICBtYXQtaWNvbiB7XG4gICAgICBib3gtc2hhZG93OiAwcHggM3B4IDFweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4yKSxcbiAgICAgICAgMHB4IDJweCAycHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xNCksIDBweCAxcHggNXB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xuICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICAgICAgcGFkZGluZzogNXB4O1xuICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgaGVpZ2h0OiAyMHB4O1xuICAgICAgd2lkdGg6IDIwcHg7XG4gICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICBiYWNrZ3JvdW5kOiAjZjVmNWY1O1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIH1cbiAgfVxufVxuIl19 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { TaxDialogComponent, DialogConfig } from \"../dialogs\";\nimport { MatTableDataSource } from \"@angular/material\";\nimport {Itax} from '../models';\n\nconst TAX_DATA: Itax[] = [\n  { id: 1, name: \"C GST\", amount: 5, inclusive: false },\n  { id: 2, name: \"G GST\", amount: 5, inclusive: false },\n  { id: 3, name: \"service tax\", amount: 8, inclusive: true }\n];\n\n@Component({\n  selector: \"app-tax\",\n  templateUrl: \"./tax.component.html\",\n  styleUrls: [\"./tax.component.scss\"]\n})\nexport class TaxComponent implements OnInit {\n  displayedColumns: string[] = [\"name\", \"amount\", \"taxMode\", \"action\"];\n  dataSource: MatTableDataSource<Itax>;\n  constructor(public dialog: MatDialog) {}\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource(TAX_DATA);\n  }\n  addNewTaxRate(): void {\n    DialogConfig.data = null;\n    const dialogRef = this.dialog.open(TaxDialogComponent, DialogConfig);\n    dialogRef\n      .afterClosed()\n      .toPromise()\n      .then(\n        result => {\n          if(result){\n            result.id = TAX_DATA.length + 1;\n            TAX_DATA.push(result);\n            this.dataSource.data = TAX_DATA;\n          }\n        },\n        err => console.log(err)\n      );\n  }\n  deleteTaxRate(index: number): void {\n    TAX_DATA.splice(index,1);\n    this.dataSource.data = TAX_DATA;\n  }\n  editTaxRate(taxData:Itax): void {\n    DialogConfig.data = taxData;\n    const dialogRef = this.dialog.open(TaxDialogComponent, DialogConfig);\n    dialogRef\n      .afterClosed()\n      .toPromise()\n      .then(\n        result => {\n          if(result){\n            for(let item of TAX_DATA){\n              if(item.id === result.id){\n                item.name = result.name;\n                item.inclusive = result.taxMode;\n                item.amount = result.amount;\n              }\n            }\n          }\n        },\n        err => console.log(err)\n      );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TaxComponent } from './tax.component';\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { BaseModule } from \"../base/base.module\";\n\nconst appRoutes: Routes = [\n  {\n    path: \"\",\n    component: TaxComponent\n  }\n];\n@NgModule({\n  declarations: [TaxComponent],\n  imports: [\n    BaseModule, RouterModule.forChild(appRoutes)\n  ]\n})\nexport class TaxModule { }\n"],"sourceRoot":""}